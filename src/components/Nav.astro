---
import NavLink from './NavLink.astro';
import siteConfig from '../data/site-config';

const navLinks = siteConfig.headerNavLinks || [];
---

<nav class="box-border m-2 sticky top-2 flex items-start z-20">
    {
        navLinks.length > 0 && (
            <div class="w-full flex items-center justify-between mx-6 relative">
                <button
                    class="menu-toggle w-8 h-8 -ml-1 flex items-center justify-center relative z-30 md:hidden"
                    aria-label="Open Menu"
                    aria-expanded="false"
                    aria-controls="menu-items"
                >
                    <span class="menu-toggle-icon w-6 h-px relative bg-current" />
                </button>
                <div class="flex gap-2">
                    <a
                    rel="noreferrer"
                    href="https://www.linkedin.com/in/caleb-diehl-a93a6984"
                    target="_blank"
                    class="transition-transform hover:scale-110"
                    >
                        <svg fill='#fff' xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/></svg>
                    </a>

                    <a rel="noreferrer" href="https://github.com/csdiehl" target="_blank" class="transition-transform hover:scale-110">
                   <svg viewBox="0 0 98 96" width="24" height="24" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z" fill="#fff"/></svg>
                    </a>
                </div>
                <div class="glass-cyan">
                    <ul id="menu-items" class="menu flex gap-6 md:flex-row md:visible md:opacity-100 md:static md:max-w-none md:p-0 md:border-0">
                        {navLinks.map((link) => (
                            <li class="py-1">
                                <NavLink
                                    class="text-sm hover:underline hover:underline-offset-2 hover:decoration-1 md:text-sm md:font-semibold md:text-main"
                                    href={link.href}
                                >
                                    {link.text}
                                </NavLink>
                            </li>
                        ))}
                    </ul>
                </div>
            </div>
        )
    }
</nav>

<style>
    @media (max-width: 767px) {
        .menu {
            flex-direction: column;
            gap: 0.25rem;
            position: absolute;
            top: -0.625rem;
            left: -0.625rem;
            max-width: 16rem;
            padding: 4rem 0.75rem 2.5rem;
            z-index: 20;
            background-color: rgb(var(--color-bg-main));
            border: 1px dashed rgb(var(--color-border-main));
            visibility: hidden;
            opacity: 0;
            width: calc(100% + 1.25rem);
        }
        .menu.is-visible {
            visibility: visible;
            opacity: 1;
            transition: opacity 0.25s cubic-bezier(0.4, 0, 0.2, 1) 0.2s;
        }
        .menu-toggle-icon {
            transition: width 0.1s cubic-bezier(0.4, 0, 0.2, 1) 0.3s;
        }
        .menu-toggle.is-active .menu-toggle-icon {
            width: 0;
            transition: width 0.1s cubic-bezier(0.4, 0, 0.2, 1);
        }
        .menu-toggle-icon:before,
        .menu-toggle-icon:after {
            width: 1.5rem;
            height: 1px;
            position: absolute;
            left: 50%;
            top: 0;
            transform-origin: center;
            transform: translateX(-50%);
            background-color: currentColor;
            content: '';
            transition:
                transform 0.2s cubic-bezier(0.4, 0, 0.2, 1),
                margin 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0.2s;
        }
        .menu-toggle-icon:before {
            margin-top: -0.375rem;
        }
        .menu-toggle-icon:after {
            margin-top: 0.375rem;
        }
        .menu-toggle.is-active .menu-toggle-icon:before,
        .menu-toggle.is-active .menu-toggle-icon:after {
            margin-top: 0;
            transition:
                margin 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0.1s,
                transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0.3s;
        }
        .menu-toggle.is-active .menu-toggle-icon:before {
            transform: translateX(-50%) rotate(45deg);
        }
        .menu-toggle.is-active .menu-toggle-icon:after {
            transform: translateX(-50%) rotate(-45deg);
        }
    }
</style>

<script>
    function menuToggle() {
        const menu = document.querySelector('.menu');
        const menuToggleBtn = document.querySelector('.menu-toggle');
        menuToggleBtn?.addEventListener('click', () => {
            const isMenuExpanded = menuToggleBtn.getAttribute('aria-expanded') === 'true';
            menuToggleBtn.classList.toggle('is-active');
            menuToggleBtn.setAttribute('aria-expanded', isMenuExpanded ? 'false' : 'true');
            menuToggleBtn.setAttribute('aria-label', isMenuExpanded ? 'Open Menu' : 'Close Menu');
            menu?.classList.toggle('is-visible');
        });
    }
    menuToggle();
    document.addEventListener('astro:after-swap', menuToggle);
</script>
