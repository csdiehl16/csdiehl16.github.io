---
import NavLink from './NavLink.astro';
import siteConfig from '../data/site-config';

const navLinks = siteConfig.headerNavLinks || [];
---

<nav class="bg-white/10 backdrop-blur-md border border-white/20 shadow-xl box-border rounded m-4 py-4 sticky top-0 flex items-start z-20">
    {
        navLinks.length > 0 && (
            <div class="w-full max-w-3xl mx-6 relative">
                <button
                    class="menu-toggle w-8 h-8 -ml-1 flex items-center justify-center relative z-30 md:hidden"
                    aria-label="Open Menu"
                    aria-expanded="false"
                    aria-controls="menu-items"
                >
                    <span class="menu-toggle-icon w-6 h-px relative bg-current" />
                </button>
                <ul id="menu-items" class="menu flex gap-6 md:flex-row md:visible md:opacity-100 md:static md:max-w-none md:p-0 md:border-0">
                    {navLinks.map((link) => (
                        <li class="py-1">
                            <NavLink
                                class="text-xl hover:underline hover:underline-offset-2 hover:decoration-1 md:text-2xl md:font-semibold md:text-main"
                                href={link.href}
                            >
                                {link.text}
                            </NavLink>
                        </li>
                    ))}
                </ul>
            </div>
        )
    }
</nav>

<style>
    @media (max-width: 767px) {
        .menu {
            flex-direction: column;
            gap: 0.25rem;
            position: absolute;
            top: -0.625rem;
            left: -0.625rem;
            max-width: 16rem;
            padding: 4rem 0.75rem 2.5rem;
            z-index: 20;
            background-color: rgb(var(--color-bg-main));
            border: 1px dashed rgb(var(--color-border-main));
            visibility: hidden;
            opacity: 0;
            width: calc(100% + 1.25rem);
        }
        .menu.is-visible {
            visibility: visible;
            opacity: 1;
            transition: opacity 0.25s cubic-bezier(0.4, 0, 0.2, 1) 0.2s;
        }
        .menu-toggle-icon {
            transition: width 0.1s cubic-bezier(0.4, 0, 0.2, 1) 0.3s;
        }
        .menu-toggle.is-active .menu-toggle-icon {
            width: 0;
            transition: width 0.1s cubic-bezier(0.4, 0, 0.2, 1);
        }
        .menu-toggle-icon:before,
        .menu-toggle-icon:after {
            width: 1.5rem;
            height: 1px;
            position: absolute;
            left: 50%;
            top: 0;
            transform-origin: center;
            transform: translateX(-50%);
            background-color: currentColor;
            content: '';
            transition:
                transform 0.2s cubic-bezier(0.4, 0, 0.2, 1),
                margin 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0.2s;
        }
        .menu-toggle-icon:before {
            margin-top: -0.375rem;
        }
        .menu-toggle-icon:after {
            margin-top: 0.375rem;
        }
        .menu-toggle.is-active .menu-toggle-icon:before,
        .menu-toggle.is-active .menu-toggle-icon:after {
            margin-top: 0;
            transition:
                margin 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0.1s,
                transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0.3s;
        }
        .menu-toggle.is-active .menu-toggle-icon:before {
            transform: translateX(-50%) rotate(45deg);
        }
        .menu-toggle.is-active .menu-toggle-icon:after {
            transform: translateX(-50%) rotate(-45deg);
        }
    }
</style>

<script>
    function menuToggle() {
        const menu = document.querySelector('.menu');
        const menuToggleBtn = document.querySelector('.menu-toggle');
        menuToggleBtn?.addEventListener('click', () => {
            const isMenuExpanded = menuToggleBtn.getAttribute('aria-expanded') === 'true';
            menuToggleBtn.classList.toggle('is-active');
            menuToggleBtn.setAttribute('aria-expanded', isMenuExpanded ? 'false' : 'true');
            menuToggleBtn.setAttribute('aria-label', isMenuExpanded ? 'Open Menu' : 'Close Menu');
            menu?.classList.toggle('is-visible');
        });
    }
    menuToggle();
    document.addEventListener('astro:after-swap', menuToggle);
</script>
