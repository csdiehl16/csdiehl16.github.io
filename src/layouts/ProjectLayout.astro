---
import BaseLayout from '../layouts/BaseLayout.astro';

export interface ProjectLayoutProps {
  mainImage: string;
  client?: string;
  mainTitle: string;
  mainDescription: string;
  themeColor: string;
  secondColor: string;
  technologies: string;
  projectLink: string;
  textBlocks: Array<{ title: string; content: string }>;
  inlineImages: string[];
}

const {
  mainImage,
  mainTitle,
  mainDescription,
  themeColor,
  secondColor,
  technologies,
  projectLink,
  textBlocks,
  inlineImages,
  client
} = Astro.props;

const inlinePhoto = "m-auto max-w-screen-md max-md:max-w-full rounded-md px-4";
const textBlock = "m-auto max-w-screen-md my-8 px-4";
---

<BaseLayout fullWidth={true} description={mainDescription} image={mainImage}>
   <div class="min-h-full py-8 grid md:grid-cols-[350px_minmax(0,_1fr)] items-center box-border project-header">
    <div class="flex flex-col items-start gap-4 p-8">
        <h1 class="text-3xl text-white font-bold">{mainTitle}</h1>
        <div class="w-full h-0.5 bg-white"></div>
        <p class="text-base text-white">{mainDescription}</p>

       {client &&  <p class="text-sm text-white"><strong>For</strong> {client}</p>}
        <p class="text-sm text-white"><strong>Technologies</strong> | {technologies}</p>

        {projectLink && <a href={projectLink} class="inline-flex items-center justify-center px-4 py-4 bg-white/30 rounded-lg border border-white w-max text-white font-bold hover:brightness-75 transition-all">View Project</a>}
    </div>
    <div class="px-16 py-8 w-full h-full flex items-center justify-center">
         <img class="rounded-md" src={mainImage}/>
    </div>
   </div>

   {textBlocks && textBlocks.map((block: any, index: number) => (
    <>
      <div class={textBlock}>
          <h3 class="text-2xl font-serif font-medium my-2">{block.title}</h3>
          <div class="mb-4 h-0.5 rule"/>
          <p class="text-base leading-6">{block.content}</p>
      </div>
        <img class={inlinePhoto} src={inlineImages[index]}/>
        </>
   ))}
</BaseLayout>

<style define:vars={{ themeColor}}>
    .project-header {
        background: linear-gradient(to right, var(--themeColor) 30%, var(--themeColor) 30%);
        background: linear-gradient(to right, ${themeColor} 30%, ${secondColor});
    }

    .rule {
        background-color: var(--themeColor);
    }
</style>
